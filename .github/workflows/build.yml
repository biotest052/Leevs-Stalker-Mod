name: Build

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Send start notification to Discord (embed)
        run: |
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{
              \"embeds\": [{
                \"title\": \"üöÄ Build Starting\",
                \"description\": \"Build started for **${{ github.repository }}**\\nCommit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})\",
                \"color\": 3447003
              }]
            }" \
            ${{ secrets.DISCORD_WEBHOOK }}

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build with Gradle (capture log)
        run: |
          ./gradlew build | tee build.log
        continue-on-error: true  # Don't fail job yet, capture log

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-files
          path: build/libs/*.jar

      - name: Send result notification & upload file/error to Discord
        if: always()
        run: |
          STATUS_TITLE="‚úÖ Build Succeeded"
          COLOR=3066993
          if [ "${{ job.status }}" != "success" ]; then
            STATUS_TITLE="‚ùå Build Failed"
            COLOR=15158332
          fi

          # Send status embed
          curl -H "Content-Type: application/json" \
            -X POST \
            -d "{
              \"embeds\": [{
                \"title\": \"${STATUS_TITLE}\",
                \"description\": \"Build finished for **${{ github.repository }}**\\nCommit: [${{ github.sha }}](${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }})\",
                \"color\": ${COLOR}
              }]
            }" \
            ${{ secrets.DISCORD_WEBHOOK }}

          # If build failed, upload the log
          if [ "${{ job.status }}" != "success" ]; then
            echo "Uploading build log to Discord..."
            curl -X POST \
              -F "payload_json={\"content\":\"üõë Build failed! Here's the log:\"}" \
              -F "file=@build.log" \
              ${{ secrets.DISCORD_WEBHOOK }}
          fi

          # Upload JARs if success
          if [ "${{ job.status }}" == "success" ]; then
            for file in build/libs/*.jar; do
              [ -e "$file" ] || continue
              echo "Uploading $file to Discord..."
              curl -X POST \
                -F "payload_json={\"content\":\"üì¶ Built file: \`$(basename "$file")\`\"}" \
                -F "file=@$file" \
                ${{ secrets.DISCORD_WEBHOOK }}
            done
          fi
